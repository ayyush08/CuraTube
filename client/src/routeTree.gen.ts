/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as TestComponentIndexImport } from './routes/test-component/index'
import { Route as PlaylistsIndexImport } from './routes/playlists/index'
import { Route as LikedVideosIndexImport } from './routes/liked-videos/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TestComponentIndexRoute = TestComponentIndexImport.update({
  id: '/test-component/',
  path: '/test-component/',
  getParentRoute: () => rootRoute,
} as any)

const PlaylistsIndexRoute = PlaylistsIndexImport.update({
  id: '/playlists/',
  path: '/playlists/',
  getParentRoute: () => rootRoute,
} as any)

const LikedVideosIndexRoute = LikedVideosIndexImport.update({
  id: '/liked-videos/',
  path: '/liked-videos/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/liked-videos/': {
      id: '/liked-videos/'
      path: '/liked-videos'
      fullPath: '/liked-videos'
      preLoaderRoute: typeof LikedVideosIndexImport
      parentRoute: typeof rootRoute
    }
    '/playlists/': {
      id: '/playlists/'
      path: '/playlists'
      fullPath: '/playlists'
      preLoaderRoute: typeof PlaylistsIndexImport
      parentRoute: typeof rootRoute
    }
    '/test-component/': {
      id: '/test-component/'
      path: '/test-component'
      fullPath: '/test-component'
      preLoaderRoute: typeof TestComponentIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/liked-videos': typeof LikedVideosIndexRoute
  '/playlists': typeof PlaylistsIndexRoute
  '/test-component': typeof TestComponentIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/liked-videos': typeof LikedVideosIndexRoute
  '/playlists': typeof PlaylistsIndexRoute
  '/test-component': typeof TestComponentIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/liked-videos/': typeof LikedVideosIndexRoute
  '/playlists/': typeof PlaylistsIndexRoute
  '/test-component/': typeof TestComponentIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/liked-videos'
    | '/playlists'
    | '/test-component'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/liked-videos' | '/playlists' | '/test-component'
  id:
    | '__root__'
    | '/'
    | '/dashboard/'
    | '/liked-videos/'
    | '/playlists/'
    | '/test-component/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  LikedVideosIndexRoute: typeof LikedVideosIndexRoute
  PlaylistsIndexRoute: typeof PlaylistsIndexRoute
  TestComponentIndexRoute: typeof TestComponentIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  LikedVideosIndexRoute: LikedVideosIndexRoute,
  PlaylistsIndexRoute: PlaylistsIndexRoute,
  TestComponentIndexRoute: TestComponentIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard/",
        "/liked-videos/",
        "/playlists/",
        "/test-component/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/liked-videos/": {
      "filePath": "liked-videos/index.tsx"
    },
    "/playlists/": {
      "filePath": "playlists/index.tsx"
    },
    "/test-component/": {
      "filePath": "test-component/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
